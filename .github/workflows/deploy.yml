name: Deploy to Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update API configuration
        run: |
          sed -i 's|VITE_PUBLIC_API_DOMAIN="http://137.184.13.30:3000"|VITE_PUBLIC_API_DOMAIN="http://64.23.206.54:3000"|g' .env.production

      - name: Build application
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: taiphamdac
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            taiphamdac/3d_stedy:${{ github.sha }}
            taiphamdac/3d_stedy:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            VITE_PUBLIC_API_DOMAIN=http://64.23.206.54:3000
            VITE_PUBLIC_API_URL=/graphql

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Create directory if it doesn't exist
            mkdir -p /var/www/3d_stedy

            # Pull latest image
            docker pull taiphamdac/3d_stedy:${{ github.sha }}

            # Backup current deployment
            if [ -d "/var/www/3d_stedy" ]; then
              tar -czf /var/www/3d_stedy_backup_$(date +%Y%m%d_%H%M%S).tar.gz /var/www/3d_stedy
            fi

            # Update deployment
            cd /var/www/3d_stedy

            # Create docker-compose.yml if it doesn't exist
            cat > docker-compose.yml << EOL
            version: '3'
            services:
              app:
                image: taiphamdac/3d_stedy:${{ github.sha }}
                ports:
                  - "3000:3000"
                restart: always
                environment:
                  - NODE_ENV=production
                  - VITE_PUBLIC_API_DOMAIN=http://64.23.206.54:3000
                  - VITE_PUBLIC_API_URL=/graphql
                healthcheck:
                  test: ["CMD", "curl", "-f", "http://localhost:80/health"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
                  start_period: 40s
                networks:
                  - app_network

            networks:
              app_network:
                driver: bridge
            EOL

            # Stop and remove existing containers
            docker-compose down || true

            # Clean up unused resources
            docker system prune -f

            # Start the new deployment
            docker-compose up -d

            # Wait for container to start
            echo "Waiting for container to start..."
            sleep 30

            # Check container status
            if ! docker ps | grep -q "3d_stedy-app-1"; then
              echo "Container failed to start"
              docker-compose logs
              exit 1
            fi

            # Health check
            echo "Checking container health..."
            for i in {1..20}; do
              if curl -f http://localhost:3000/health; then
                echo "Health check passed!"
                break
              fi
              if [ $i -eq 20 ]; then
                echo "Health check failed"
                docker-compose logs
                exit 1
              fi
              echo "Waiting for service to be ready... ($i/20)"
              sleep 5
            done
